# ************************************************** Scenario: Resolve Dockerfile Issues *****************************************************

# The Nautilus DevOps team is working to create new images per requirements shared by the development team. One of the team members is working to create a Dockerfile on App Server 3 in Stratos DC. While working on it she ran into issues in which the docker build is failing and displaying errors. Look into the issue and fix it to build an image as per details mentioned below:


# a. The Dockerfile is placed on App Server 3 under /opt/docker directory.

# b. Fix the issues with this file and make sure it is able to build the image.

# c. Do not change base image, any other valid configuration within Dockerfile, or any of the data been used â€” for example, index.html.

# Note: Please note that once you click on FINISH button all existing images, the containers will be destroyed and new image will be built from your Dockerfile.

# --------------------------------------------------------------------------------------------------------------------------------------
# Solution:

# Troubleshoot the docker file by runngin following command

# 1. Login server3  with root navigate to docker file path, execute following command to troubleshoot the docker file

# docker build .

# 2. Based on the errors update the docker file

# final docker file should looks like below.

FROM httpd:2.4.43

RUN sed -i "s/Listen 80/Listen 8080/g" /usr/local/apache2/conf/httpd.conf

RUN sed -i '/LoadModule\ ssl_module modules\/mod_ssl.so/s/^#//g' conf/httpd.conf

RUN sed -i '/LoadModule\ socache_shmcb_module modules\/mod_socache_shmcb.so/s/^#//g' conf/httpd.conf

RUN sed -i '/Include\ conf\/extra\/httpd-ssl.conf/s/^#//g' conf/httpd.conf

COPY certs/server.crt /usr/local/apache2/conf/server.crt

COPY certs/server.key /usr/local/apache2/conf/server.key

COPY html/index.html /usr/local/apache2/htdocs/

# 3. Verification
# First try to build an image using this Dockerfile using sudo docker build -t my_image .
# You should see that the image gets built successfully with any errors
# Next is try to run the image as sudo docker run --name my_httpd -p 8080:8080 -d my_image. It should run without any errors.
# Lastly test using curl as curl http://localhost:8080. You should a HTML content returned from the container.

